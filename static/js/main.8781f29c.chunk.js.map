{"version":3,"sources":["constants/index.js","components/MovieDetail.js","components/MovieList.js","App.js","serviceWorker.js","api/index.js","sagas/index.js","reducers/index.js","index.js"],"names":["MOVIE_FETCH_REQUESTED","MOVIE_FETCH_SUCCEEDED","MOVIE_FETCH_FAILED","MOVIES_FETCH_REQUESTED","MOVIES_FETCH_SUCCEEDED","MOVIES_FETCH_FAILED","useStyles","makeStyles","theme","root","display","breakpoints","up","image","width","flexGrow","content","box","props","dispatch","useDispatch","classes","movie","useSelector","state","movieReducer","shallowEqual","favorites","favoritesReducer","id","match","params","isFavoriteMovie","some","movieItem","imdbID","useEffect","type","payload","loadMovie","Card","Box","className","CardMedia","component","alt","Poster","title","CardContent","Typography","gutterBottom","variant","IconButton","edge","color","aria-label","onClick","item","Title","Actors","Plot","card","details","flexDirection","flex","cover","controls","alignItems","paddingLeft","spacing","paddingBottom","playIcon","height","isFavoritesPage","path","handleScroll","e","items","length","totalResults","window","innerHeight","document","documentElement","scrollTop","offsetHeight","search","page","addEventListener","removeEventListener","map","CardActionArea","key","setMovie","Type","Year","Divider","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","justifyContent","starIcon","primary","contrastText","inputRoot","inputInput","padding","transition","transitions","create","Boolean","location","hostname","apiURL","fetchMovie","a","fetch","response","json","fetchMovies","movieSaga","moviesSaga","rootSaga","action","call","Api","put","push","message","Search","takeLatest","all","combineReducers","moviesReducer","filter","history","createBrowserHistory","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","routerMiddleware","run","ReactDOM","render","useState","setSearch","movies","AppBar","Toolbar","to","menuButton","Badge","badgeContent","anchorOrigin","horizontal","vertical","margin","noWrap","InputBase","placeholder","input","inputProps","onKeyDown","keyCode","target","value","loadMovies","exact","MovieList","MovieDetail","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8781f29c.chunk.js","sourcesContent":["export const MOVIE_FETCH_REQUESTED = 'MOVIE_FETCH_REQUESTED';\r\nexport const MOVIE_FETCH_SUCCEEDED = 'MOVIE_FETCH_SUCCEEDED';\r\nexport const MOVIE_FETCH_FAILED = 'MOVIE_FETCH_FAILED';\r\n\r\nexport const MOVIES_FETCH_REQUESTED = 'MOVIES_FETCH_REQUESTED';\r\nexport const MOVIES_FETCH_SUCCEEDED = 'MOVIES_FETCH_SUCCEEDED';\r\nexport const MOVIES_FETCH_FAILED = 'MOVIES_FETCH_FAILED';\r\n\r\nexport const MOVIE_ADD_FAVORITE = 'MOVIE_ADD_FAVORITE';\r\nexport const MOVIE_REMOVE_FAVORITE = 'MOVIE_REMOVE_FAVORITE';\r\n\r\nexport const PAGE_ITEMS = 10\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, shallowEqual, useSelector } from 'react-redux';\r\nimport { Card, CardContent, CardMedia, IconButton, Typography, Box } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { StarBorder as InactiveStarIcon, Star as ActiveStarIcon} from '@material-ui/icons';\r\nimport { MOVIE_FETCH_REQUESTED, MOVIE_ADD_FAVORITE, MOVIE_REMOVE_FAVORITE } from '../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'block',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    image: {\r\n        width: 'initial',\r\n        flexGrow: 1,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n    },\r\n    box: {\r\n        display: 'block',\r\n    }\r\n}));\r\n\r\nexport default (props) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    \r\n    const movie = useSelector((state) => state.movieReducer.movie, shallowEqual);\r\n    const favorites = useSelector((state) => state.favoritesReducer, shallowEqual);\r\n    \r\n    const { id } = props.match.params;\r\n    const isFavoriteMovie = favorites.some((movieItem) => movieItem.imdbID === movie.imdbID);\r\n    \r\n    const loadMovie = (id) => dispatch({ type: MOVIE_FETCH_REQUESTED, payload: { id } });\r\n    const handleFavorite = (item) => {\r\n        if (isFavoriteMovie) dispatch({ type: MOVIE_REMOVE_FAVORITE, id: item.imdbID });\r\n        else dispatch({ type: MOVIE_ADD_FAVORITE, movie: item });\r\n    }\r\n\r\n    useEffect(() => {\r\n        !movie && loadMovie(id)\r\n    }, [])\r\n\r\n\r\n    return movie && (\r\n        <Card>\r\n            <Box className={classes.root}>\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    image={movie.Poster}\r\n                    title=\"Contemplative Reptile\"\r\n                    className={classes.image}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            color=\"secondary\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={() => handleFavorite(movie)}\r\n                        >\r\n                            {isFavoriteMovie ? <ActiveStarIcon /> : <InactiveStarIcon />}\r\n                        </IconButton>\r\n                        {movie.Title}\r\n                    </Typography>\r\n                    <Typography>\r\n                        {movie.Actors}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {movie.Plot}\r\n                    </Typography>\r\n                </CardContent>\r\n            </Box>\r\n        </Card>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { CardActionArea, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { MOVIE_FETCH_REQUESTED, MOVIES_FETCH_REQUESTED } from '../constants';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n        display: 'flex',\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    content: {\r\n        flex: '1 0 auto',\r\n    },\r\n    cover: {\r\n        width: 151,\r\n    },\r\n    controls: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: theme.spacing(1),\r\n        paddingBottom: theme.spacing(1),\r\n    },\r\n    playIcon: {\r\n        height: 38,\r\n        width: 38,\r\n    },\r\n}));\r\n\r\nexport default (props) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    const isFavoritesPage = props.match.path === '/favorites';\r\n\r\n    const loadMovie = (id) => dispatch({ type: MOVIE_FETCH_REQUESTED, payload: { id } });\r\n    const setMovie = (movie) => dispatch({ type: MOVIE_FETCH_REQUESTED, payload: { movie } });\r\n\r\n    const handleScroll = (e) => {\r\n        if (props.items && props.items.length >= props.totalResults || window.innerHeight + document.documentElement.scrollTop < document.documentElement.offsetHeight) return;\r\n\r\n        dispatch({ type: MOVIES_FETCH_REQUESTED, payload: { search: props.search, page: props.page + 1 } })\r\n    }\r\n\r\n    !isFavoritesPage && useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        handleScroll();\r\n        return () => window.removeEventListener('scroll', handleScroll);\r\n    }, []);\r\n\r\n    return (\r\n        !props.items ? <></> :props.items.map((movie) => (\r\n            <CardActionArea key={movie.imdbID} onClick={() => isFavoritesPage ? setMovie(movie) : loadMovie(movie.imdbID)}>\r\n                <Card className={classes.card}>\r\n                    <CardMedia\r\n                        className={classes.cover}\r\n                        image={movie.Poster}\r\n                        title={movie.Title}\r\n                    />\r\n                    <CardContent className={classes.content}>\r\n                        <Typography component=\"h3\" variant=\"h5\">\r\n                            {movie.Title}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                            {movie.Type}\r\n                        </Typography>\r\n                        <Typography>\r\n                            {movie.Year}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Divider />\r\n            </CardActionArea>\r\n        ))\r\n    )\r\n}\r\n","import React, { useState } from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport SearchIcon from '@material-ui/icons/Search';\nimport StarIcon from '@material-ui/icons/Star';\nimport { Route, Link } from \"react-router-dom\";\nimport MovieDetail from './components/MovieDetail';\nimport MovieList from './components/MovieList';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux'\nimport { MOVIES_FETCH_REQUESTED } from './constants';\nimport { Badge } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(6),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    starIcon: {\n        color: theme.palette.primary.contrastText,\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nexport default () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const [search, setSearch] = useState('');\n\n    const movies = useSelector((state) => state.moviesReducer, shallowEqual);\n    const favorites = useSelector((state) => state.favoritesReducer, shallowEqual) || [];\n\n    const loadMovies = (search) => dispatch({ type: MOVIES_FETCH_REQUESTED, payload: { search } });\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"sticky\">\n                <Toolbar>\n                    <Link to={'/favorites'}>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                        >\n                            <Badge\n                                color=\"secondary\"\n                                badgeContent={favorites.length}\n                                anchorOrigin={{\n                                    horizontal: 'right',\n                                    vertical: 'bottom',\n                                }}\n                                className={classes.margin}\n                            >\n                                <StarIcon className={classes.starIcon} />\n                            </Badge>\n                        </IconButton>\n                    </Link>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        Movie database\n                        </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search movies…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                            onKeyDown={(e) => {\n                                if (e.keyCode === 13) {\n                                    setSearch(e.target.value);\n                                    loadMovies(e.target.value);\n                                }\n                            }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <Route path=\"/\" exact component={(props) => <MovieList {...props} search={search} {...movies} />} />\n            <Route path=\"/movie/:id\" exact component={MovieDetail} />\n            <Route path=\"/favorites\" exact component={(props) => <MovieList {...props} items={favorites} search={''} />} />\n        </div>\n    );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const apiURL = 'http://www.omdbapi.com/?apikey=cb5da875';\r\n\r\nexport default {\r\n    fetchMovie: async (id) => {\r\n        const response = await fetch(`${apiURL}&i=${id}`);\r\n        const movie = await response.json();\r\n\r\n        return movie;\r\n    },\r\n    fetchMovies: async (search, page) => {\r\n        const response = await fetch(`${apiURL}&s=${search}&page=${page}`);\r\n        const movie = await response.json();\r\n\r\n        return movie;\r\n    },\r\n}\r\n","import { call, put, takeLatest, all } from 'redux-saga/effects';\r\nimport { push } from 'react-router-redux';\r\nimport Api from '../api';\r\nimport {\r\n    MOVIE_FETCH_SUCCEEDED, MOVIE_FETCH_FAILED, MOVIE_FETCH_REQUESTED,\r\n    MOVIES_FETCH_SUCCEEDED, MOVIES_FETCH_FAILED, MOVIES_FETCH_REQUESTED\r\n} from '../constants';\r\n\r\nfunction* fetchMovie(action) {\r\n    try {\r\n        const id = action.payload.id || action.payload.movie.imdbID\r\n        const movie = action.payload.movie || (yield call(Api.fetchMovie, id));\r\n\r\n        yield put({ type: MOVIE_FETCH_SUCCEEDED, movie });\r\n        yield put(push(`/movie/${id}`))\r\n    } catch ({ message }) {\r\n        yield put({ type: MOVIE_FETCH_FAILED, message });\r\n    }\r\n}\r\n\r\nfunction* fetchMovies(action) {\r\n    try {\r\n        const { search, page = 1 } = action.payload;\r\n        const { Search: items, totalResults } = yield call(Api.fetchMovies, search, page);\r\n\r\n        yield put({ type: MOVIES_FETCH_SUCCEEDED, payload: { items, totalResults, page } });\r\n        yield put(push('/'))\r\n    } catch ({ message }) {\r\n        yield put({ type: MOVIES_FETCH_FAILED, message });\r\n    }\r\n}\r\n\r\nfunction* movieSaga() {\r\n    yield takeLatest(MOVIE_FETCH_REQUESTED, fetchMovie);\r\n}\r\n\r\nfunction* moviesSaga() {\r\n    yield takeLatest(MOVIES_FETCH_REQUESTED, fetchMovies);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        movieSaga(),\r\n        moviesSaga(),\r\n    ]);\r\n}\r\n","import { combineReducers } from \"redux\";\r\n\r\nexport const movieReducer = (state = { movie: null }, action) => {\r\n    switch (action.type) {\r\n        case 'MOVIE_FETCH_SUCCEEDED':\r\n            return { ...state, movie: action.movie };\r\n        case 'MOVIE_FETCH_FAILED':\r\n            return { ...state, movie: null };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const moviesReducer = (state = {\r\n    items: [],\r\n    page: 1,\r\n    totalResults: 0,\r\n}, action) => {\r\n    switch (action.type) {\r\n        case 'MOVIES_FETCH_SUCCEEDED':\r\n            if (action.payload.page > 1) {\r\n                return {\r\n                    ...state,\r\n                    ...action.payload,\r\n                    items: [...state.items, ...action.payload.items],\r\n                }\r\n            }\r\n            return { ...state, ...action.payload };\r\n        case 'MOVIES_FETCH_FAILED':\r\n            return { ...state, items: [] };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const favoritesReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'MOVIE_ADD_FAVORITE':\r\n            if (state.some((movie) => movie.imdbID === action.movie.imdbID)) return state;\r\n            return [...state, action.movie];\r\n        case 'MOVIE_REMOVE_FAVORITE':\r\n            return state.filter((movie) => movie.imdbID !== action.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({ movieReducer, moviesReducer, favoritesReducer });\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from './sagas';\nimport rootReducer from './reducers'\nimport { routerMiddleware } from 'react-router-redux';\nimport { Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory();\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware, routerMiddleware(history)));\n\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}